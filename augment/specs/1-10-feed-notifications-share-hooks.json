{
  "version": "1.0.0",
  "generatedAt": "2025-10-01T05:26:39.501Z",
  "source": {
    "type": "bmad-story",
    "file": "docs/stories/1.10.feed-notifications-and-sharing.md"
  },
  "story": {
    "id": "1.10",
    "title": "Feed Notifications & Share Hooks",
    "status": "Ready",
    "userStory": "**As a** creator or engaged user of Pod.Style,\n**I want** feed interactions (likes, comments, shares, remixes) to trigger timely notifications and shareable links,\n**so that** I stay informed about engagement and can amplify creations beyond the platform.",
    "acceptanceCriteria": [
      "Interactions on feed entries (like/favorite/comment/share/remake) invoke server actions that log events via `social-service`, update counters (`creations`, `personalized_feed_cache`), and enqueue notifications without regressing existing functionality.",
      "Notification pipeline (Cloud Function or service) writes to `notifications` collection and supports push/email triggers following the moderation-safe workflow.",
      "Each feed entry exposes a shareable link/metadata (OG tags, tracking params) ensuring links respect feature flags and legacy routes.",
      "Observability captures interaction events (counts, latency), notification success/failure, and ensures dashboards track engagement metrics segmented by feed variant.",
      "Tests cover interaction logging, notification enqueueing, share link generation, and regression against legacy `/` path when feature flag disabled."
    ],
    "tasks": [
      {
        "title": "Interaction logging (AC: 1)",
        "status": "todo",
        "subtasks": [
          {
            "title": "Extend server actions to call `social-service.logInteraction`, updating counters + ranking signals.",
            "status": "todo",
            "subtasks": []
          },
          {
            "title": "Ensure AC compatibility with existing creation interaction flows.",
            "status": "todo",
            "subtasks": []
          }
        ]
      },
      {
        "title": "Notification pipeline (AC: 2)",
        "status": "todo",
        "subtasks": [
          {
            "title": "Cloud Function or queue consumer writes notification entries, respecting moderation states.",
            "status": "todo",
            "subtasks": []
          },
          {
            "title": "Support push/email triggers via existing notification framework.",
            "status": "todo",
            "subtasks": []
          }
        ]
      },
      {
        "title": "Share link support (AC: 3)",
        "status": "todo",
        "subtasks": [
          {
            "title": "Provide shareable URLs with OG metadata; handle `/beta` vs legacy path.",
            "status": "todo",
            "subtasks": []
          },
          {
            "title": "Document share tracking parameters for analytics.",
            "status": "todo",
            "subtasks": []
          }
        ]
      },
      {
        "title": "Observability (AC: 4)",
        "status": "todo",
        "subtasks": [
          {
            "title": "Emit metrics (`feed.interaction.count`, `feed.notification.success`) and log failures.",
            "status": "todo",
            "subtasks": []
          },
          {
            "title": "Update dashboards/alerts for interaction spikes or failures.",
            "status": "todo",
            "subtasks": []
          }
        ]
      },
      {
        "title": "Testing (AC: 5)",
        "status": "todo",
        "subtasks": [
          {
            "title": "Jest tests for interaction logging + notification queue.",
            "status": "todo",
            "subtasks": []
          },
          {
            "title": "Playwright tests verifying share links and notifications triggered.",
            "status": "todo",
            "subtasks": []
          },
          {
            "title": "Manual regression ensuring legacy interactions unaffected.",
            "status": "todo",
            "subtasks": []
          }
        ]
      }
    ],
    "devNotes": {
      "Previous Story Insights": [
        "Stories 1.1â€“1.9 established feed, ranking, ingestion, search, moderation. Interaction/notification layer ties engagement back to feed quality."
      ],
      "Data Models": [
        "`social_edges`, `engagement_events`, `notifications` track interactions; ensure consistency with existing schema.",
        "`[Source: architecture-brownfield.md#53-data-model]`"
      ],
      "API & Service Specifications": [
        "Interaction logging route uses `logInteraction` and updates `personalized_feed_cache` ranking signals.",
        "`[Source: architecture.md#4-application-architecture]`",
        "Notification service orchestrates push/email; align with moderation to avoid notifying about removed content.",
        "`[Source: architecture-brownfield.md#52-backend-services]`"
      ],
      "Component Specifications": [
        "Feed UI surfaces share buttons; ensure user experience consistent across variants.",
        "`[Source: architecture.md#3-business-user-experience-architecture]`"
      ],
      "File Locations & Project Structure": [
        "Interaction logic resides `src/features/social/server/`; feed actions call into it.",
        "`[Source: architecture.md#41-components--responsibilities]`",
        "Notifications pipeline in `functions/` or server services per architecture guidance.",
        "`[Source: architecture-brownfield.md#6-workflows]`"
      ],
      "Testing Requirements": [
        "Unit tests for interaction logging, notification writer, share link builder.",
        "`[Source: architecture.md#8-testing-strategy]`",
        "Integration tests verifying notifications appear and share links resolve.",
        "`[Source: architecture.md#8-testing-strategy]`"
      ],
      "Technical Constraints": [
        "Feature flags must control new UI so legacy flow unaffected.",
        "`[Source: architecture.md#11-next-steps]`",
        "Observability metrics integrate with existing dashboards.",
        "`[Source: architecture.md#74-observability]`",
        "Share links must respect moderation (no exposing removed content).",
        "`[Source: architecture-brownfield.md#55-moderation--safety]`"
      ]
    },
    "testing": [
      "Jest unit tests for interactions and notifications. `[Source: architecture.md#8-testing-strategy]`",
      "Playwright tests for share links and UI actions. `[Source: architecture.md#8-testing-strategy]`"
    ]
  },
  "augment": {
    "recommendedPlaybooks": {
      "design": [
        {
          "name": "AC-1",
          "goal": "Interactions on feed entries (like/favorite/comment/share/remake) invoke server actions that log events via `social-service`, update counters (`creations`, `personalized_feed_cache`), and enqueue notifications without regressing existing functionality."
        },
        {
          "name": "AC-2",
          "goal": "Notification pipeline (Cloud Function or service) writes to `notifications` collection and supports push/email triggers following the moderation-safe workflow."
        },
        {
          "name": "AC-3",
          "goal": "Each feed entry exposes a shareable link/metadata (OG tags, tracking params) ensuring links respect feature flags and legacy routes."
        },
        {
          "name": "AC-4",
          "goal": "Observability captures interaction events (counts, latency), notification success/failure, and ensures dashboards track engagement metrics segmented by feed variant."
        },
        {
          "name": "AC-5",
          "goal": "Tests cover interaction logging, notification enqueueing, share link generation, and regression against legacy `/` path when feature flag disabled."
        }
      ],
      "implementation": [
        {
          "title": "Interaction logging (AC: 1)",
          "status": "todo",
          "subtasks": [
            {
              "title": "Extend server actions to call `social-service.logInteraction`, updating counters + ranking signals.",
              "status": "todo",
              "subtasks": []
            },
            {
              "title": "Ensure AC compatibility with existing creation interaction flows.",
              "status": "todo",
              "subtasks": []
            }
          ]
        },
        {
          "title": "Notification pipeline (AC: 2)",
          "status": "todo",
          "subtasks": [
            {
              "title": "Cloud Function or queue consumer writes notification entries, respecting moderation states.",
              "status": "todo",
              "subtasks": []
            },
            {
              "title": "Support push/email triggers via existing notification framework.",
              "status": "todo",
              "subtasks": []
            }
          ]
        },
        {
          "title": "Share link support (AC: 3)",
          "status": "todo",
          "subtasks": [
            {
              "title": "Provide shareable URLs with OG metadata; handle `/beta` vs legacy path.",
              "status": "todo",
              "subtasks": []
            },
            {
              "title": "Document share tracking parameters for analytics.",
              "status": "todo",
              "subtasks": []
            }
          ]
        },
        {
          "title": "Observability (AC: 4)",
          "status": "todo",
          "subtasks": [
            {
              "title": "Emit metrics (`feed.interaction.count`, `feed.notification.success`) and log failures.",
              "status": "todo",
              "subtasks": []
            },
            {
              "title": "Update dashboards/alerts for interaction spikes or failures.",
              "status": "todo",
              "subtasks": []
            }
          ]
        },
        {
          "title": "Testing (AC: 5)",
          "status": "todo",
          "subtasks": [
            {
              "title": "Jest tests for interaction logging + notification queue.",
              "status": "todo",
              "subtasks": []
            },
            {
              "title": "Playwright tests verifying share links and notifications triggered.",
              "status": "todo",
              "subtasks": []
            },
            {
              "title": "Manual regression ensuring legacy interactions unaffected.",
              "status": "todo",
              "subtasks": []
            }
          ]
        }
      ],
      "qa": [
        "Jest unit tests for interactions and notifications. `[Source: architecture.md#8-testing-strategy]`",
        "Playwright tests for share links and UI actions. `[Source: architecture.md#8-testing-strategy]`"
      ]
    }
  }
}